apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: mern-devops
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      name: backend
      labels:
        app: backend
    spec:
      securityContext:  # Pod-level security context
        runAsUser: 1000  # A non-root UID
        runAsGroup: 3000  # Group ID for volume access if needed
        fsGroup: 2000  # Group ID for volume access if needed
      containers:
        - name: backend
          image: atkaridarshan04/bookstore-backend:v2
          ports:
            - containerPort: 8000
          env:
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: PORT
            - name: mongoDBURL
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: mongoDBURL  
          livenessProbe:
            httpGet:
              path: /books
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /books
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 15
          # resources:
          #   requests:
          #     memory: "128Mi"
          #     cpu: "0.25"
          #   limits:
          #     memory: "256Mi"
          #     cpu: "0.25"
          securityContext:  # Container-level security context
            runAsUser: 1000  # A non-root UID
            runAsGroup: 3000
            allowPrivilegeEscalation: false  # Prevent privilege escalation
            capabilities:
              drop:
                - ALL  # Drop all capabilities for security
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: mern-devops
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      nodePort: 31100
